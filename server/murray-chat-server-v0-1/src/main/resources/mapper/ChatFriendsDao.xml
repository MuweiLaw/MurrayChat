<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.murray.dao.ChatFriendsDao">
  <resultMap id="BaseResultMap" type="com.murray.entity.ChatFriends">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="chat_user_no" jdbcType="CHAR" property="chatUserNo" />
    <result column="friend_user_no" jdbcType="CHAR" property="friendUserNo" />
    <result column="note_name" jdbcType="VARCHAR" property="noteName" />
    <result column="see_me" jdbcType="BOOLEAN" property="seeMe" />
    <result column="see_other_party" jdbcType="BOOLEAN" property="seeOtherParty" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="ResponseResultMap" type="com.murray.dto.response.ChatFriendResponse">
    <result column="chat_user_no" jdbcType="CHAR" property="chatUserNo" />
    <result column="friend_user_no" jdbcType="CHAR" property="friendUserNo" />
    <result column="note_name" jdbcType="VARCHAR" property="noteName" />
    <result column="see_me" jdbcType="BOOLEAN" property="seeMe" />
    <result column="see_other_party" jdbcType="BOOLEAN" property="seeOtherParty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chat_user_no, friend_user_no, note_name, see_me, see_other_party, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.murray.entity.example.ChatFriendsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chat_friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_friends
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from chat_friends
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.murray.entity.example.ChatFriendsExample">
    delete from chat_friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.murray.entity.ChatFriends" useGeneratedKeys="true">
    insert into chat_friends (chat_user_no, friend_user_no, note_name, 
      see_me, see_other_party, create_time, 
      update_time)
    values (#{chatUserNo,jdbcType=CHAR}, #{friendUserNo,jdbcType=CHAR}, #{noteName,jdbcType=VARCHAR}, 
      #{seeMe,jdbcType=BOOLEAN}, #{seeOtherParty,jdbcType=BOOLEAN}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.murray.entity.ChatFriends" useGeneratedKeys="true">
    insert into chat_friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chatUserNo != null">
        chat_user_no,
      </if>
      <if test="friendUserNo != null">
        friend_user_no,
      </if>
      <if test="noteName != null">
        note_name,
      </if>
      <if test="seeMe != null">
        see_me,
      </if>
      <if test="seeOtherParty != null">
        see_other_party,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chatUserNo != null">
        #{chatUserNo,jdbcType=CHAR},
      </if>
      <if test="friendUserNo != null">
        #{friendUserNo,jdbcType=CHAR},
      </if>
      <if test="noteName != null">
        #{noteName,jdbcType=VARCHAR},
      </if>
      <if test="seeMe != null">
        #{seeMe,jdbcType=BOOLEAN},
      </if>
      <if test="seeOtherParty != null">
        #{seeOtherParty,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.murray.entity.example.ChatFriendsExample" resultType="java.lang.Long">
    select count(*) from chat_friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chat_friends
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.chatUserNo != null">
        chat_user_no = #{record.chatUserNo,jdbcType=CHAR},
      </if>
      <if test="record.friendUserNo != null">
        friend_user_no = #{record.friendUserNo,jdbcType=CHAR},
      </if>
      <if test="record.noteName != null">
        note_name = #{record.noteName,jdbcType=VARCHAR},
      </if>
      <if test="record.seeMe != null">
        see_me = #{record.seeMe,jdbcType=BOOLEAN},
      </if>
      <if test="record.seeOtherParty != null">
        see_other_party = #{record.seeOtherParty,jdbcType=BOOLEAN},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chat_friends
    set id = #{record.id,jdbcType=BIGINT},
      chat_user_no = #{record.chatUserNo,jdbcType=CHAR},
      friend_user_no = #{record.friendUserNo,jdbcType=CHAR},
      note_name = #{record.noteName,jdbcType=VARCHAR},
      see_me = #{record.seeMe,jdbcType=BOOLEAN},
      see_other_party = #{record.seeOtherParty,jdbcType=BOOLEAN},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.murray.entity.ChatFriends">
    update chat_friends
    <set>
      <if test="chatUserNo != null">
        chat_user_no = #{chatUserNo,jdbcType=CHAR},
      </if>
      <if test="friendUserNo != null">
        friend_user_no = #{friendUserNo,jdbcType=CHAR},
      </if>
      <if test="noteName != null">
        note_name = #{noteName,jdbcType=VARCHAR},
      </if>
      <if test="seeMe != null">
        see_me = #{seeMe,jdbcType=BOOLEAN},
      </if>
      <if test="seeOtherParty != null">
        see_other_party = #{seeOtherParty,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.murray.entity.ChatFriends">
    update chat_friends
    set chat_user_no = #{chatUserNo,jdbcType=CHAR},
      friend_user_no = #{friendUserNo,jdbcType=CHAR},
      note_name = #{noteName,jdbcType=VARCHAR},
      see_me = #{seeMe,jdbcType=BOOLEAN},
      see_other_party = #{seeOtherParty,jdbcType=BOOLEAN},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectFriendsByChatUserNO" parameterType="java.lang.String" resultMap="ResponseResultMap">
    select
    `chat_friends`.chat_user_no,`chat_friends`.friend_user_no,`chat_user`.`name`,
    `chat_friends`.note_name,`chat_friends`.see_me,`chat_friends`.see_other_party,`chat_user`.signature
    FROM `chat_friends` INNER JOIN `chat_user`
    ON `chat_friends`.chat_user_no=#{chatUserNo,jdbcType=CHAR} and `chat_user`.chat_user_no=`chat_friends`.friend_user_no
  </select>
</mapper>